# Оптимизированная конфигурация nginx для production
# Используйте этот файл для production сервера

# Основные настройки nginx
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Размеры буферов
    client_max_body_size 16M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # MIME типы
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        font/opentype;

    # Кэширование
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream для балансировки (если нужно)
    # upstream backend {
    #     server 127.0.0.1:3000;
    #     server 127.0.0.1:3001;
    # }

    # HTTP сервер
    server {
        listen 80;
        server_name artom55.ru www.artom55.ru;
        
        # Логи
        access_log /var/log/nginx/artom55.ru.access.log main;
        error_log /var/log/nginx/artom55.ru.error.log warn;
        
        # Корневая директория
        root /var/www/artom55.ru/dist;
        index index.html;
        
        # Rate limiting для API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            # proxy_pass http://backend;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Rate limiting для логина
        location /login {
            limit_req zone=login burst=5 nodelay;
            try_files $uri $uri/ /index.html;
        }
        
        # Кэширование статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            try_files $uri =404;
        }
        
        # Кэширование HTML файлов
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            try_files $uri =404;
        }
        
        # Основная конфигурация для SPA
        location / {
            try_files $uri $uri/ /index.html;
            
            # Заголовки безопасности
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
            add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        }
        
        # Запрет доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Запрет доступа к файлам логов и конфигурации
        location ~* \.(log|txt|conf|ini|env)$ {
            deny all;
        }
        
        # Запрет доступа к файлам пакетов
        location ~* \.(json|lock|md)$ {
            deny all;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS сервер (раскомментируйте после получения SSL сертификата)
    # server {
    #     listen 443 ssl http2;
    #     server_name artom55.ru www.artom55.ru;
    #     
    #     # SSL сертификаты
    #     ssl_certificate /etc/letsencrypt/live/artom55.ru/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/artom55.ru/privkey.pem;
    #     
    #     # SSL настройки
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_session_tickets off;
    #     
    #     # OCSP Stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     resolver 8.8.8.8 8.8.4.4 valid=300s;
    #     resolver_timeout 5s;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    #     
    #     # Остальные настройки такие же как в HTTP блоке
    #     root /var/www/artom55.ru/dist;
    #     index index.html;
    #     
    #     # Rate limiting
    #     location /api/ {
    #         limit_req zone=api burst=20 nodelay;
    #         # proxy_pass http://backend;
    #     }
    #     
    #     location /login {
    #         limit_req zone=login burst=5 nodelay;
    #         try_files $uri $uri/ /index.html;
    #     }
    #     
    #     # Кэширование статических файлов
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #         add_header Vary Accept-Encoding;
    #         try_files $uri =404;
    #     }
    #     
    #     location ~* \.html$ {
    #         expires 1h;
    #         add_header Cache-Control "public, must-revalidate";
    #         try_files $uri =404;
    #     }
    #     
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #         
    #         add_header X-Frame-Options "SAMEORIGIN" always;
    #         add_header X-XSS-Protection "1; mode=block" always;
    #         add_header X-Content-Type-Options "nosniff" always;
    #         add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #         add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    #         add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    #     }
    #     
    #     location ~ /\. {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #     
    #     location ~* \.(log|txt|conf|ini|env)$ {
    #         deny all;
    #     }
    #     
    #     location ~* \.(json|lock|md)$ {
    #         deny all;
    #     }
    #     
    #     location /health {
    #         access_log off;
    #         return 200 "healthy\n";
    #         add_header Content-Type text/plain;
    #     }
    # }

    # Редирект с HTTP на HTTPS
    # server {
    #     listen 80;
    #     server_name artom55.ru www.artom55.ru;
    #     return 301 https://$server_name$request_uri;
    # }
} 